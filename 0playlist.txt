https://www.youtube.com/playlist?list=PLpaKFn4Q4GMOhOuffvi7VagNib0P325AV
====
[Curso de Git e GitHub - 2023] Aula 1: Versionamento de Código
    o que é um sistema de controle de versao? o que, quando e quem fez alguma coisa 
    exemplos de plataformas: svn, git, mercurial, cvs, tfs, perforce, bazaar, darcs, fossil, etc
    plataformas de hospedagem de codigo: bitbucket, sourceforge, gitlab, github, etc
[Curso de Git e GitHub - 2023] Aula 2: Monitoramento de estados e ambientes
    working directory, staged snapshot, commit history, remote repository
[Curso de Git e GitHub - 2023] Aula 3: Principais comandos GIT
    git config, git init, git branch, git checkout, git status, git clone,
    git add, git commit, git push, git pull, git merge, git diff,
    git log, git stash
[Curso de Git e GitHub - 2023] Aula 4: setup e configuração do ambiente de programação para GIT
    .
[Curso de Git e GitHub - 2023] Aula 5: git commit
    git commit -m "mensagem" => fluxo: codigo, git add, git commit, git push, pull request
    .gitignore
[Curso de Git e GitHub - 2023] Aula 5.1: na prática - git commit, add, push e outros.
    hands-on => maos a obra
    git init , git branch , git status , git log , git add <file> / git rm --cache <file> , git commit -m "mensagem"
    git config --global user.email "you@example.com"
    git config --global user.name "Your Name"
    git log --pretty=oneline
    git diff
    git restore --staged <file> 
    git branch -M main (mudar o nome da branche)
    git remote add origin https://github.com/evandroquatorze/curso-git.git
    git remote get-url origin
    git push -u origin master
[Curso de Git e GitHub - 2023] Aula 5.2: na prática - como analisar o histórico de commits
    git commit -am "sexto commit"
    git blame <file>
[Curso de Git e GitHub - 2023] Aula 6: o que são branches?
    branches de state, release e features
    branches main / develop => longa duração e não faz commits diretamente deve ser atualizado pull request & merges
    branches features => curto prazo , novas funcionalidades, correções, etc, 
    github flow => uma trilha principal , cria branch de desenvolvimento , faz o merge 
    gitflow => mais de uma trilha principal (main e desenvolvimento), cria branch para correção , faz o merge
[Curso de Git e GitHub - 2023] Aula 6.1: na prática - git push, pull requests & code reviews.
    git branch (saber onde estou), git checkout -b "feature" (cria uma nova versao), 